apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-apiserver
  namespace: {{ .Namespace }}
  labels:
    tier: control-plane
    k8s-app: kube-apiserver
    openshift.io/control-plane: true
    openshift.io/component: api
  annotations:
    openshift.io/run-level: 0
spec:
  selector:
    matchLabels:
      tier: control-plane
      k8s-app: kube-apiserver
      openshift.io/control-plane: true
      openshift.io/component: api
  template:
    metadata:
      labels:
        tier: control-plane
        k8s-app: kube-apiserver
        openshift.io/control-plane: true
        openshift.io/component: api
    spec:
      containers:
      - name: kube-apiserver
        image: {{ .Image }}
        imagePullPolicy: {{ .ImagePullPolicy }}
        command: ["/bin/bash", "-c"]
        args:
        - |
          #!/bin/bash
          set -euo pipefail
          if [[ -f /etc/origin/master/master.env ]]; then
            set -o allexport
            source /etc/origin/master/master.env
          fi
          exec hypershift openshift-kube-apiserver --config=/etc/origin/master/config.json
        volumeMounts:
        - mountPath: /etc/ssl/certs
          name: ssl-certs-host
          readOnly: true
        - mountPath: /etc/kubernetes/secrets
          name: secrets
          readOnly: true
      hostNetwork: true
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      volumes:
      - name: ssl-certs-host
        hostPath:
          path: /usr/share/ca-certificates
      - name: secrets
        secret:
          secretName: kube-apiserver
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate