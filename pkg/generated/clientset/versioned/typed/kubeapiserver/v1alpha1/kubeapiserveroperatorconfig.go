// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openshift/cluster-kube-apiserver-operator/pkg/apis/kubeapiserver/v1alpha1"
	scheme "github.com/openshift/cluster-kube-apiserver-operator/pkg/generated/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	rest "k8s.io/client-go/rest"
)

// KubeAPIServerOperatorConfigsGetter has a method to return a KubeAPIServerOperatorConfigInterface.
// A group's client should implement this interface.
type KubeAPIServerOperatorConfigsGetter interface {
	KubeAPIServerOperatorConfigs() KubeAPIServerOperatorConfigInterface
}

// KubeAPIServerOperatorConfigInterface has methods to work with KubeAPIServerOperatorConfig resources.
type KubeAPIServerOperatorConfigInterface interface {
	Create(*v1alpha1.KubeAPIServerOperatorConfig) (*v1alpha1.KubeAPIServerOperatorConfig, error)
	Update(*v1alpha1.KubeAPIServerOperatorConfig) (*v1alpha1.KubeAPIServerOperatorConfig, error)
	UpdateStatus(*v1alpha1.KubeAPIServerOperatorConfig) (*v1alpha1.KubeAPIServerOperatorConfig, error)
	Delete(name string, options *v1.DeleteOptions) error
	DeleteCollection(options *v1.DeleteOptions, listOptions v1.ListOptions) error
	Get(name string, options v1.GetOptions) (*v1alpha1.KubeAPIServerOperatorConfig, error)
	List(opts v1.ListOptions) (*v1alpha1.KubeAPIServerOperatorConfigList, error)
	Watch(opts v1.ListOptions) (watch.Interface, error)
	Patch(name string, pt types.PatchType, data []byte, subresources ...string) (result *v1alpha1.KubeAPIServerOperatorConfig, err error)
	KubeAPIServerOperatorConfigExpansion
}

// kubeAPIServerOperatorConfigs implements KubeAPIServerOperatorConfigInterface
type kubeAPIServerOperatorConfigs struct {
	client rest.Interface
}

// newKubeAPIServerOperatorConfigs returns a KubeAPIServerOperatorConfigs
func newKubeAPIServerOperatorConfigs(c *KubeapiserverV1alpha1Client) *kubeAPIServerOperatorConfigs {
	return &kubeAPIServerOperatorConfigs{
		client: c.RESTClient(),
	}
}

// Get takes name of the kubeAPIServerOperatorConfig, and returns the corresponding kubeAPIServerOperatorConfig object, and an error if there is any.
func (c *kubeAPIServerOperatorConfigs) Get(name string, options v1.GetOptions) (result *v1alpha1.KubeAPIServerOperatorConfig, err error) {
	result = &v1alpha1.KubeAPIServerOperatorConfig{}
	err = c.client.Get().
		Resource("kubeapiserveroperatorconfigs").
		Name(name).
		VersionedParams(&options, scheme.ParameterCodec).
		Do().
		Into(result)
	return
}

// List takes label and field selectors, and returns the list of KubeAPIServerOperatorConfigs that match those selectors.
func (c *kubeAPIServerOperatorConfigs) List(opts v1.ListOptions) (result *v1alpha1.KubeAPIServerOperatorConfigList, err error) {
	result = &v1alpha1.KubeAPIServerOperatorConfigList{}
	err = c.client.Get().
		Resource("kubeapiserveroperatorconfigs").
		VersionedParams(&opts, scheme.ParameterCodec).
		Do().
		Into(result)
	return
}

// Watch returns a watch.Interface that watches the requested kubeAPIServerOperatorConfigs.
func (c *kubeAPIServerOperatorConfigs) Watch(opts v1.ListOptions) (watch.Interface, error) {
	opts.Watch = true
	return c.client.Get().
		Resource("kubeapiserveroperatorconfigs").
		VersionedParams(&opts, scheme.ParameterCodec).
		Watch()
}

// Create takes the representation of a kubeAPIServerOperatorConfig and creates it.  Returns the server's representation of the kubeAPIServerOperatorConfig, and an error, if there is any.
func (c *kubeAPIServerOperatorConfigs) Create(kubeAPIServerOperatorConfig *v1alpha1.KubeAPIServerOperatorConfig) (result *v1alpha1.KubeAPIServerOperatorConfig, err error) {
	result = &v1alpha1.KubeAPIServerOperatorConfig{}
	err = c.client.Post().
		Resource("kubeapiserveroperatorconfigs").
		Body(kubeAPIServerOperatorConfig).
		Do().
		Into(result)
	return
}

// Update takes the representation of a kubeAPIServerOperatorConfig and updates it. Returns the server's representation of the kubeAPIServerOperatorConfig, and an error, if there is any.
func (c *kubeAPIServerOperatorConfigs) Update(kubeAPIServerOperatorConfig *v1alpha1.KubeAPIServerOperatorConfig) (result *v1alpha1.KubeAPIServerOperatorConfig, err error) {
	result = &v1alpha1.KubeAPIServerOperatorConfig{}
	err = c.client.Put().
		Resource("kubeapiserveroperatorconfigs").
		Name(kubeAPIServerOperatorConfig.Name).
		Body(kubeAPIServerOperatorConfig).
		Do().
		Into(result)
	return
}

// UpdateStatus was generated because the type contains a Status member.
// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().

func (c *kubeAPIServerOperatorConfigs) UpdateStatus(kubeAPIServerOperatorConfig *v1alpha1.KubeAPIServerOperatorConfig) (result *v1alpha1.KubeAPIServerOperatorConfig, err error) {
	result = &v1alpha1.KubeAPIServerOperatorConfig{}
	err = c.client.Put().
		Resource("kubeapiserveroperatorconfigs").
		Name(kubeAPIServerOperatorConfig.Name).
		SubResource("status").
		Body(kubeAPIServerOperatorConfig).
		Do().
		Into(result)
	return
}

// Delete takes name of the kubeAPIServerOperatorConfig and deletes it. Returns an error if one occurs.
func (c *kubeAPIServerOperatorConfigs) Delete(name string, options *v1.DeleteOptions) error {
	return c.client.Delete().
		Resource("kubeapiserveroperatorconfigs").
		Name(name).
		Body(options).
		Do().
		Error()
}

// DeleteCollection deletes a collection of objects.
func (c *kubeAPIServerOperatorConfigs) DeleteCollection(options *v1.DeleteOptions, listOptions v1.ListOptions) error {
	return c.client.Delete().
		Resource("kubeapiserveroperatorconfigs").
		VersionedParams(&listOptions, scheme.ParameterCodec).
		Body(options).
		Do().
		Error()
}

// Patch applies the patch and returns the patched kubeAPIServerOperatorConfig.
func (c *kubeAPIServerOperatorConfigs) Patch(name string, pt types.PatchType, data []byte, subresources ...string) (result *v1alpha1.KubeAPIServerOperatorConfig, err error) {
	result = &v1alpha1.KubeAPIServerOperatorConfig{}
	err = c.client.Patch(pt).
		Resource("kubeapiserveroperatorconfigs").
		SubResource(subresources...).
		Name(name).
		Body(data).
		Do().
		Into(result)
	return
}
